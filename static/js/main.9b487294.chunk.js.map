{"version":3,"sources":["scripts/ToggleLocalize.js","scripts/Title.js","scripts/TextControl.js","scripts/Slider.js","scripts/Input.js","scripts/Settings.js","scripts/Duration.js","scripts/ControlPanel.js","scripts/SourceText.js","scripts/TextContent.js","scripts/CurrentLine.js","scripts/TextInfo.js","scripts/TimeInfo.js","scripts/TextAndTimeInfo.js","scripts/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["ToggleLocalize","useTranslation","t","i18n","className","title","onClick","changeLanguage","localStorage","setItem","Title","props","TextControl","handlerChange","ev","text","target","value","setState","sourceText","onSourceTextChange","handlerDrop","stopPropagation","preventDefault","file","dataTransfer","files","loadFile","handlerFileChange","handlerFileLoad","e","srcElement","result","fileReader","FileReader","addEventListener","readAsText","state","this","htmlFor","type","id","onChange","onDrop","placeholder","onKeyUp","React","Component","withTranslation","Slider","newSetting","name","onSliderChange","min","max","symbol","Input","onInputChange","Settings","onSettingsChange","handlerMirrorChange","mirror","checked","width","speed","fontSize","background","color","btnStart","useState","useEffect","Duration","timeLeft","setTimeLeft","status","intervalId","setInterval","clearInterval","strMin","strSec","html","Math","floor","sec","toString","push","styleDuration","style","ControlPanel","handlerClick","newStatus","onControlClick","showSettings","stylePanel","display","stylePanelSettings","stylePanelBtn","playStyle","pauseStyle","closeStyle","isMobile","SourceText","h","ReactDOM","findDOMNode","offsetHeight","onTxtContentMount","prevProps","prevState","TextContent","handleHeightTxtContent","height","handlerOnClick","st","closest","code","keyCode","newSt","onContainerClick","window","styleContainer","visibility","zIndex","styleText","top","transform","round","translate","CurrentLine","styLine","TextInfo","length","split","replace","toFixed","TimeInfo","getDuration","duration","date","Date","setSeconds","toISOString","substr","TextAndTimeInfo","Footer","href","App","setSourceText","setSettings","setting","setStatus","oldStatus","play","pause","stop","setHeight","setWindowSize","windowWidth","innerWidth","getItem","lang","y","infoPart","controlPart","interval","removeEventListener","timestamp","currentStatus","currentSpeed","gap","start","undefined","elapsed","animationID","requestAnimationFrame","draw","bind","fromStart","scrollTo","cancelAnimationFrame","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","i18next","init","interpolation","escapeValue","lng","resources","en","common","common_en","ru","common_ru","es","common_es","zh","common_zh","render","I18nextProvider","document","getElementById"],"mappings":"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","file":"static/js/main.9b487294.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\n\r\nfunction ToggleLocalize()\r\n{\r\n    const [t, i18n] = useTranslation('common');\r\n    return (    \r\n    <div className=\"toggle-localize\">\r\n        <div>{t('project.language')}:</div>\r\n        <button title=\"Русский\" className=\"btn\"\r\n            onClick={() => { i18n.changeLanguage('ru'); localStorage.setItem('lang', 'ru');} }>ru</button>\r\n        <button title=\"English\" className=\"btn\"\r\n            onClick={() => { i18n.changeLanguage('en'); localStorage.setItem('lang', 'en');}}>en</button>\r\n        <button title=\"Español\" className=\"btn\"\r\n            onClick={() => { i18n.changeLanguage('es'); localStorage.setItem('lang', 'es');}}>es</button>\r\n        <button title=\"汉语\" className=\"btn\"\r\n            onClick={() => { i18n.changeLanguage('zh'); localStorage.setItem('lang', 'zh');}}>zh</button>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ToggleLocalize;","import {useTranslation} from \"react-i18next\";\r\nimport ToggleLocalize from './ToggleLocalize';\r\n\r\nfunction Title(props){ \r\n    const {t, i18n} = useTranslation('common');\r\n\r\n    return (\r\n        <div className=\"title\">\r\n            <div className=\"project-header\">  \r\n                <ToggleLocalize/>          \r\n                <h1>SuflerFun</h1>                \r\n            </div>\r\n         <div className=\"project-description\">{t('project.description')}</div>\r\n             {/* Проект создания суфлера. На вход подаётся текст и указываются настройки, на выходе текст движется с нужной скоростью, в нужном направлении. Настраиваются: шрифт, скорость, фон. Важная особенность - возможность работы в виде мобильной версии сайта   */}\r\n         <p/>     \r\n         </div>         \r\n    )\r\n}\r\nexport default Title;","import React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nclass TextControl extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);             \r\n        this.state = {\r\n            sourceText: this.props.text\r\n        };\r\n    } \r\n\r\n    handlerChange = ev => {     \r\n        let text = ev.target.value;           \r\n        this.setState({sourceText: text}); \r\n        this.props.onSourceTextChange(text);\r\n    }\r\n\r\n    handlerDrop = ev => {     \r\n        ev.stopPropagation(); \r\n        ev.preventDefault(); \r\n        let dt = ev.dataTransfer;\r\n        let file = dt.files[0];\r\n        this.loadFile(file);\r\n\r\n    }\r\n\r\n    handlerFileChange = ev => {\r\n        let file = ev.target.files[0];\r\n        this.loadFile(file);\r\n    }\r\n\r\n    handlerFileLoad = e => {\r\n        let target = e.target || e.srcElement;          \r\n        let text = target.result;\r\n        this.setState({sourceText: text}); \r\n        this.props.onSourceTextChange(text);    \r\n    }\r\n\r\n    loadFile = (file) => {\r\n        let fileReader  = new FileReader();\r\n        fileReader.addEventListener('load', this.handlerFileLoad)    \r\n        fileReader.readAsText(file, 'utf-8');\r\n    }\r\n\r\n    render(){\r\n        const { t } = this.props;\r\n        return ( \r\n            <div className=\"content\">  \r\n                <div className=\"text-label\">{t('settings.textLabel')}:</div>  \r\n                <div className=\"file-download\">\r\n                    <label htmlFor=\"fileInput\" className=\"btn\">{t('settings.uploadText')}</label>\r\n                    <input type=\"file\" id='fileInput' className=\"upload-file\" onChange={this.handlerFileChange}></input>\r\n                </div>\r\n                <div onDrop={this.handlerDrop} >\r\n                    <textarea \r\n                    className=\"text-control\" \r\n                    placeholder={t('settings.txtControlPlaceHolder')}\r\n                    value={this.props.text}\r\n                    onChange={this.handlerChange}\r\n                    onKeyUp={this.handlerChange}                \r\n                    ></textarea>\r\n                </div>\r\n                \r\n            </div>\r\n           \r\n        );           \r\n    }\r\n}\r\nexport default withTranslation('common')(TextControl);","import React from 'react';\r\n\r\nclass Slider extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    } \r\n\r\n    handlerChange = ev => {   \r\n        let newSetting = {};\r\n        newSetting[ev.target.name]=ev.target.value;    \r\n        this.props.onSliderChange(newSetting);\r\n    }\r\n\r\n    render(){\r\n        return (            \r\n            <div className=\"slidecontainer control-panel-row\">\r\n                <div className=\"setting-label\">{this.props.title}</div>\r\n                <input type=\"range\" \r\n                    min={this.props.min}  \r\n                    max={this.props.max} \r\n                    value={this.props.value} \r\n                    className=\"slider\"                                   \r\n                    name={this.props.name}  \r\n                    onChange={this.handlerChange} \r\n                />\r\n                <div className=\"symbol\">{this.props.value}{this.props.symbol}</div>\r\n            </div>            \r\n        );           \r\n    }\r\n}\r\n\r\nexport default Slider;","import React from 'react';\r\n\r\nclass Input extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    } \r\n\r\n    handlerChange = ev => {   \r\n        let newSetting = {};\r\n        newSetting[ev.target.name]=ev.target.value;    \r\n        this.props.onInputChange(newSetting);\r\n    }\r\n\r\n    render(){\r\n        return ( \r\n            <div className=\"control-panel-row\">\r\n                <label className=\"setting-label\" htmlFor={this.props.name}>{this.props.title}</label>\r\n                <input type={this.props.type} \r\n                name={this.props.name} \r\n                value={this.props.value} \r\n                onChange={this.handlerChange}/>\r\n            </div> \r\n        );           \r\n    }\r\n}\r\nexport default Input;","import React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Slider from './Slider';\r\nimport Input from './Input';\r\n\r\nclass Settings extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);             \r\n        this.state = {\r\n            width: this.props.width,\r\n            speed:this.props.speed,\r\n            fontSize:this.props.fontSize,\r\n            background:this.props.background,\r\n            color:this.props.color,\r\n            btnStart: 1           \r\n        };\r\n    } \r\n\r\n    handlerChange = (newSetting) => {         \r\n        this.setState(newSetting);\r\n        this.props.onSettingsChange(newSetting);\r\n    }\r\n\r\n    handlerMirrorChange = (ev) => { \r\n        this.props.onSettingsChange({mirror: ev.target.checked});\r\n    }\r\n\r\n    render(){\r\n        const { t } = this.props;\r\n\r\n        return (\r\n            <div key=\"s1\" className=\"panel-settings\">\r\n                <div key=\"s11\" className=\"panel-settings-col\">\r\n                <Slider key=\"width\"\r\n                title={t('settings.widthName')}\r\n                    min={50}\r\n                    max={100}\r\n                    value={this.state.width}\r\n                    name=\"width\"\r\n                    symbol=\"%\"\r\n                    onSliderChange={this.handlerChange} />\r\n                <Slider key=\"speed\"\r\n                    title={t('settings.speedName')}\r\n                    min={10}\r\n                    max={300}\r\n                    value={this.state.speed}\r\n                    name=\"speed\"                      \r\n                    symbol={t('settings.speedUnit')}                 \r\n                    onSliderChange={this.handlerChange} />  \r\n                <Slider key=\"fontSize\"\r\n                    title={t('settings.fontName')}\r\n                    min={3}\r\n                    max={300}\r\n                    value={this.state.fontSize}\r\n                    name=\"fontSize\"\r\n                    symbol=\"px\"                   \r\n                    onSliderChange={this.handlerChange} /> \r\n                </div>\r\n                <div key=\"s2\" className=\"panel-settings-col\">\r\n                <Input key=\"background\"\r\n                    title={t('settings.backgroundName')}\r\n                    type=\"color\"                 \r\n                    value={this.state.background}\r\n                    name=\"background\"                   \r\n                    onInputChange={this.handlerChange} /> \r\n                <Input key=\"color\"\r\n                    title={t('settings.fontColorName')}\r\n                    type=\"color\"                 \r\n                    value={this.state.color}\r\n                    name=\"color\"                   \r\n                    onInputChange={this.handlerChange} />    \r\n                <div key=\"s21\" className=\"control-panel-row\"> \r\n                    <label htmlFor=\"mirror\">\r\n                        <span className=\"setting-label\">{t('settings.mode')}</span>\r\n                        <label className=\"switch\">\r\n                            <input id=\"mirror\" type=\"checkbox\" name=\"mirror\" checked={this.props.mirror?  true : false} onChange={this.handlerMirrorChange} />                        \r\n                            <span className=\"switch-slider\"></span>\r\n                        </label>                        \r\n                    </label>\r\n                </div>             \r\n                </div>             \r\n                            \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withTranslation('common')(Settings);","import React from 'react';\r\n\r\nvar useState = React.useState ;\r\nvar useEffect = React.useEffect ;\r\n\r\nfunction Duration(props){   \r\n    const [timeLeft, setTimeLeft] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (props.status === 'stop') return;\r\n    \r\n        const intervalId = \r\n        setInterval(() => {            \r\n            if (props.status === 'play')\r\n                setTimeLeft(timeLeft + 1);\r\n            else if (props.status === 'stop' || props.status === 'end'){\r\n                clearInterval(intervalId);\r\n            }\r\n                     \r\n        }, 1000);\r\n    \r\n        return () => clearInterval(intervalId);\r\n    }, [timeLeft, props.status]);\r\n\r\n      var html = [];\r\n      var strMin, strSec;  \r\n      var min = Math.floor(timeLeft/60);\r\n      var sec = timeLeft - (min *60);\r\n      strMin = (min < 10)? '0'+min.toString() : min.toString();\r\n      strSec = (sec < 10)? '0'+sec.toString() : sec.toString();\r\n      html.push(<div key={strMin}><div key={strSec} className=\"timer\">{strMin}:{strSec}</div></div>);\r\n           \r\n    let styleDuration = {\r\n        color: props.color\r\n    }\r\n      return (<div key=\"d1\" style={styleDuration}>{html}</div> );\r\n}\r\nexport default Duration;","import React from 'react';\r\nimport Settings from './Settings';\r\nimport Duration from './Duration';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nclass ControlPanel extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);             \r\n        this.state = {\r\n            status: this.props.status,\r\n            background: this.props.background,\r\n            showSettings:false\r\n        };\r\n    } \r\n\r\n    handlerClick = ev => {   \r\n        let newStatus = {};\r\n        newStatus[\"status\"]=ev.target.name;\r\n        this.setState(newStatus);\r\n        this.props.onControlClick(newStatus);\r\n    }\r\n    showSettings = ev => {        \r\n        this.setState({showSettings: !this.state.showSettings});        \r\n    }\r\n\r\n    render(){  \r\n        const { t } = this.props;\r\n\r\n        let stylePanel = {            \r\n            display: (this.props.status !== 'stop')? 'block': 'none'\r\n        };     \r\n        let stylePanelSettings = {\r\n            background: this.props.color, \r\n            display: (this.props.status !== 'stop' && this.state.showSettings )? 'block': 'none'\r\n        };\r\n        let stylePanelBtn = {\r\n            background: this.props.background            \r\n        };\r\n\r\n        let playStyle = {\r\n            display: (this.props.status !== 'play')? 'inline-block': 'none'\r\n        };\r\n        let pauseStyle = {\r\n            display: (this.props.status === 'play')? 'inline-block': 'none'\r\n        };\r\n        let closeStyle = {\r\n            display: (this.props.status !== 'stop')? 'inline-block': 'none'\r\n        };\r\n\r\n        if (this.props.status === 'stop' ){\r\n            \r\n            return (\r\n                <div className={ this.props.isMobile ? \"setting-panel mobile-setting-panel\": \"setting-panel\" }>\r\n                    <Settings key=\"StartSettings\" \r\n                        width={this.props.width} \r\n                        speed={this.props.speed} \r\n                        fontSize={this.props.fontSize} \r\n                        background={this.props.background} \r\n                        color={this.props.color}\r\n                        onSettingsChange = {this.props.onSettingsChange} \r\n                        mirror={this.props.mirror} />\r\n                    <div key=\"btn-start-setting\" className= \"start-panel control-panel\" >            \r\n                        <button id =\"btn-start\" className=\"btn fa fa-play-circle\" title={t('buttons.start')}\r\n                            name=\"play\" style={playStyle} onClick={this.handlerClick}></button>\r\n                    </div>   \r\n                </div>\r\n                              \r\n            );\r\n        }        \r\n        return ( \r\n        \r\n            <div key=\"1\" className= \"play-panel-header control-panel\" style={stylePanel}>            \r\n                <div key=\"2\" className= \"play-panel-settings\" style={stylePanelSettings}>\r\n                    <Settings key=\"Settings\" \r\n                    width={this.props.width} \r\n                    speed={this.props.speed} \r\n                    fontSize={this.props.fontSize} \r\n                    background={this.props.background} \r\n                    color={this.props.color}\r\n                    onSettingsChange = {this.props.onSettingsChange} \r\n                    mirror={this.props.mirror} />                   \r\n                </div>\r\n                <div key=\"3\" className=\"panel-btn\"  style={stylePanelBtn}>\r\n                    <div key=\"panel-line-btn\" className= \"panel-line\" >\r\n                            <div className= \"panel-btn-block\" >\r\n                                <button key=\"btn-play\" id =\"btn-play\" title={t('buttons.play')}\r\n                                    className=\"btn fa fa-play-circle\" name=\"play\" style={playStyle} onClick={this.handlerClick}></button>\r\n                                <button key=\"btn-pause\" id =\"btn-pause\" title={t('buttons.pause')}\r\n                                    className=\"btn fa fa-pause-circle\" name=\"pause\" style={pauseStyle} onClick={this.handlerClick}></button>\r\n                                <button key=\"btn-close\" id =\"btn-close\" title={t('buttons.close')}\r\n                                    className=\"btn fa fa-window-close\" name=\"stop\" style={closeStyle} onClick={this.handlerClick}></button>                     \r\n                                <button key=\"btn-tool\" id =\"btn-settings\" title={t('buttons.settings')}\r\n                                    className=\"btn fa fa-cog\" name=\"showSettings\" onClick={this.showSettings}></button>                     \r\n                            \r\n                            </div>\r\n                        </div>  \r\n                    <div key=\"panel-line-duration\" className= \"panel-line duration\">\r\n                        <Duration key=\"Duration\" status={this.props.status} color={this.props.color} />\r\n                    </div>\r\n                </div>\r\n                 \r\n            </div>          \r\n        );           \r\n    }\r\n}\r\n\r\nexport default withTranslation('common')(ControlPanel);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass SourceText extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    } \r\n    componentDidMount() {           \r\n        let h = ReactDOM.findDOMNode(this).offsetHeight; \r\n        this.props.onTxtContentMount(h);\r\n    } \r\n    componentDidUpdate(prevProps, prevState) {\r\n        let h = ReactDOM.findDOMNode(this).offsetHeight; \r\n        this.props.onTxtContentMount(h);\r\n    } \r\n\r\n    render(){\r\n        return (\r\n            <div className=\"source-text\" style={this.props.style} >{this.props.text}</div>\r\n          );     \r\n    }\r\n}\r\nexport default SourceText;","import React from 'react';\r\nimport SourceText from './SourceText';\r\n\r\nclass TextContent extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);            \r\n       \r\n    } \r\n    componentDidMount() {           \r\n        window.addEventListener('keydown', this.handlerOnClick);    \r\n        window.addEventListener('click', this.handlerOnClick);\r\n    }  \r\n    handleHeightTxtContent = (height) => {        \r\n        if (height !== this.props.height){\r\n            this.props.onTxtContentMount(height);\r\n        }\r\n    }   \r\n\r\n    handlerOnClick = (ev)=> { \r\n        let st = this.props.status;       \r\n        if ( (!ev.target || (ev.target && !ev.target.closest(\".control-panel\")))           \r\n            && ev.target.id !== \"btn-start\"\r\n            && st !== 'stop' \r\n            && (ev.type === 'click' || (ev.type === \"keydown\" && (ev.code === \"Space\" || ev.keyCode === 32)))){\r\n            ev.preventDefault();\r\n            let newSt = (st === 'play')? 'pause': 'play';          \r\n            this.props.onContainerClick({ status : newSt });\r\n        }\r\n        return;\r\n    }    \r\n\r\n    render(){\r\n        let styleContainer = {\r\n            background: this.props.background, \r\n            visibility: (this.props.status === 'play' || this.props.status === 'pause' || this.props.status === 'end' )? 'visible': 'hidden',\r\n            zIndex: 2\r\n        };\r\n        \r\n        let styleText = {\r\n            width: this.props.width + '%', \r\n            //transitionDuration: this.props.interval * 10 +'ms',//из-за него дребезжит \r\n            top: `calc(50vh + ${this.props.fontSize}px )`,\r\n            color: this.props.color,\r\n            transform: 'translateY('+ Math.round(this.props.translate) +'px)',\r\n            fontSize: this.props.fontSize+ \"px\"\r\n        };\r\n\r\n        return ( \r\n            <div className={\"source-container \" + ((this.props.mirror)? 'mirror': '') + (this.props.isMobile ? ' wrapword ' : '')} style={styleContainer} >       \r\n                <SourceText key=\"SourceText\" style={styleText} text={this.props.text} onTxtContentMount={this.handleHeightTxtContent} />\r\n            </div>           \r\n        );\r\n    }\r\n}\r\nexport default TextContent;","import React from 'react';\r\n\r\nfunction CurrentLine(props){   \r\n\r\n    let styLine = {\r\n        display: (props.status === 'play' || props.status === 'pause') ? 'block': 'none', \r\n        height: props.fontSize+'px',\r\n        background: props.background\r\n    };\r\n    \r\n    return (\r\n        <div className= \"current-line\" style={styLine}></div>\r\n    )\r\n}\r\nexport default CurrentLine;","\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nfunction TextInfo(props){   \r\n    const {t, i18n} = useTranslation('common');\r\n    return (\r\n        <div className= \"info-container\" >\r\n        <div className= \"info-title\">{t('textInfo.info')}:</div>\r\n        <table className= \"info\">\r\n        <tbody>\r\n            <tr>\r\n                <td>{t('textInfo.words')}</td>\r\n                <td>{(props.text.length)? props.text.split(/ +(?:\\S)/).length : 0}</td></tr>\r\n            <tr>\r\n                <td>{t('textInfo.symbols')}</td>\r\n                <td>{(props.text.length)? props.text.replace(/ *n*r*t*/g, \"\").length: 0}</td></tr>\r\n            <tr>\r\n                <td>{t('textInfo.sentences')}</td>\r\n                <td>{(props.text.length)? props.text.split('.').length : 0}</td></tr>\r\n            <tr>\r\n                <td>{t('textInfo.weight')}</td>\r\n                <td>{(props.text.length)? (props.text.length/1024).toFixed(2) : 0}kb</td></tr>\r\n        </tbody>\r\n        </table>           \r\n        </div>\r\n       \r\n    )\r\n}\r\nexport default TextInfo;","import React from 'react';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nfunction TimeInfo(props){ \r\n    const {t, i18n} = useTranslation('common');\r\n    \r\n    let getDuration = function(speed){        \r\n        let height = props.height;     \r\n          \r\n        let duration = height / speed;\r\n        var date = new Date(null);\r\n        date.setSeconds(Math.round(duration));\r\n        var result = date.toISOString().substr(11, 8);        \r\n        return result;\r\n      }\r\n\r\n    return (\r\n\r\n        <div className= \"info-container\" >\r\n        <div className= \"info-title\">{t('timeInfo.title')}: {getDuration(props.speed)}</div>\r\n        <table className= \"info\">\r\n        <tbody>\r\n            <tr>\r\n                <td>10 {t('settings.speedUnit')}</td>\r\n                <td>{getDuration(10)}</td></tr>\r\n            <tr>\r\n                <td>50 {t('settings.speedUnit')}</td>\r\n                <td>{getDuration(50)}</td></tr>\r\n            <tr>\r\n                <td>100 {t('settings.speedUnit')}</td>\r\n                <td>{getDuration(100)}</td></tr>\r\n            <tr>\r\n                <td>200 {t('settings.speedUnit')}</td>\r\n                <td>{getDuration(200)}</td></tr>\r\n        </tbody>\r\n        </table>           \r\n        </div>\r\n    )\r\n    \r\n}\r\nexport default TimeInfo;","import React from 'react';\r\nimport TextInfo from './TextInfo';\r\nimport TimeInfo from './TimeInfo';\r\n\r\nfunction TextAndTimeInfo(props){   \r\n\r\n    return (\r\n        <div className= \"container-info-block\" >\r\n            <TextInfo key=\"TextInfo\"  text={props.text} />           \r\n            <TimeInfo key=\"TimeInfo\"  text={props.text} speed={props.speed} height={props.height} fontSize={props.fontSize} />\r\n        </div>\r\n    )\r\n}\r\nexport default TextAndTimeInfo;","\r\nfunction Footer(props){    \r\n\r\n    return (\r\n          <footer>\r\n              <div className=\"copyright\">&copy;2021 <a href=\"https://github.com/yxazxdmhikef\">yutre-yutre</a></div>\r\n          </footer>   \r\n    )\r\n}\r\nexport default Footer;","import React from 'react';\nimport i18n from 'i18next';\n\nimport Title from './scripts/Title';\nimport TextControl from './scripts/TextControl';\nimport ControlPanel from './scripts/ControlPanel';\nimport TextContent from './scripts/TextContent';\nimport CurrentLine from './scripts/CurrentLine';\nimport TextAndTimeInfo from './scripts/TextAndTimeInfo';\nimport Footer from './scripts/Footer';\n\n\nclass App extends React.Component{\n\n  constructor(props) {\n      super(props); \n      \n      let text = localStorage.getItem('sourceText') || '';      \n      let lang = localStorage.getItem('lang') || 'ru';\n\n      i18n.changeLanguage(lang);\n\n      this.state = {\n          mirror: false, \n          sourceText: text,\n          width: 80,\n          speed: 80,\n          fontSize:124,\n          background: '#272822',\n          color:'#FFFFFF',\n          status: 'stop',\n          height: 0,     \n          windowWidth: window.innerWidth,        \n          y: 0,    \n          translate: 0\n          \n      };     \n      \n  } \n\n  setSourceText = (text) => {            \n      this.setState({sourceText: text}); \n      localStorage.setItem('sourceText', text);     \n  }\n\n  setSettings = (setting) => {            \n      this.setState(setting);       \n      \n  }\n\n  setStatus = (newStatus) => {     \n    \n      var oldStatus = this.state.status;\n\n      this.setState(newStatus);       \n      //TODO: доработать статус стоп\n      switch (newStatus[\"status\"]){\n          case \"play\": \n              this.play(oldStatus === 'end');              \n              break;\n          case \"pause\":\n              this.pause();\n              break;\n          case \"stop\":\n              this.stop();\n              break;            \n          default:\n              break;\n      }\n  }\n\n  setHeight = (h) =>{\n      this.setState({height: h});  \n  }\n\n  render(){\n      var isMobile = this.state.windowWidth < 576 ;\n      \n      var infoPart = (\n        <div className= {isMobile? \"mobile-right-side\" : \"left-side \" }>\n            <TextAndTimeInfo key=\"TextAndTimeInfo\" \n            text={this.state.sourceText} \n            speed={this.state.speed}\n            height={this.state.height}\n            fontSize={this.state.fontSize}\n            />\n        </div>\n      );\n\n      var controlPart = (\n        <ControlPanel key=\"ControlPanel\" \n                    status={this.state.status} \n                    background={this.state.background}\n                    onControlClick={this.setStatus}               \n                    width={this.state.width} \n                    speed={this.state.speed} \n                    fontSize={this.state.fontSize}                   \n                    color={this.state.color}\n                    onSettingsChange = {this.setSettings}   \n                    isMobile= {isMobile} \n                    mirror={this.state.mirror}           \n                    /> \n      );\n\n      return (  \n        <div className=\"\">      \n          <Title /> \n          <div className=\"main\">\n            {isMobile ? null : infoPart}\n            <div className={isMobile? \"mobile-left-side\" : \"right-side\" }>  \n                {isMobile ? null: controlPart}      \n                <TextControl key=\"TextControl\" \n                    text={this.state.sourceText} \n                    onSourceTextChange = {this.setSourceText} /> \n                {isMobile ? controlPart: null}\n                <TextContent key=\"TextContent\" \n                    mirror={this.state.mirror} \n                    text={this.state.sourceText} \n                    background={this.state.background}\n                    color={this.state.color}\n                    status={this.state.status}\n                    width={this.state.width}\n                    height={this.state.height}\n                    interval={this.state.interval}\n                    fontSize={this.state.fontSize}\n                    translate={this.state.translate}\n                    onTxtContentMount={this.setHeight}\n                    onContainerClick={this.setStatus}\n                    isMobile={isMobile}\n                />\n                <CurrentLine key=\"CurrentLine\" \n                    status={this.state.status}\n                    fontSize={this.state.fontSize}\n                    background={this.state.color}\n                />\n            </div>    \n            {isMobile ? infoPart : null}\n          </div>\n          <Footer/>\n        </div> \n      );\n  }\n  setWindowSize = () => {\n    this.setState({\n        windowWidth: window.innerWidth\n    });\n  }\n  componentDidMount() {\n    this.setWindowSize();\n    window.addEventListener('resize', this.setWindowSize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setWindowSize);\n  }\n\n  draw(timestamp) {\n    var currentStatus = this.state.status;         \n    var currentSpeed = this.state.speed;\n    var height = this.state.height + this.state.fontSize;\n    var speed = this.state.speed; //кол-во пикселей в сек    \n    \n    var translate = this.state.translate;\n    var y = this.state.y;  \n   \n    var gap = ( speed  / 1000);\n        \n    var start = this.state.start;\n    if (start === undefined){\n        start = timestamp;\n        this.setState({ start: start}); \n    }   \n\n    var elapsed =  (timestamp - start);     \n\n    if(translate < -height || currentStatus !== 'play'){ \n        if (translate < -height)  {\n            this.setState({ status: 'end'}); \n        } \n        return;\n    }  \n    else{\n      if (currentSpeed !== speed){         \n          return this.play();    \n      }\n      translate = y - (gap * elapsed); \n     \n      this.setState({ translate: translate}); \n      \n      var animationID = window.requestAnimationFrame(this.draw.bind(this));       \n      this.setState({ animationID: animationID});\n      \n    } \n\n   \n } \n \n \n  play(fromStart){       \n    //HACK: венёмся к началу страницы\n    if (fromStart || this.state.translate === 0){\n        window.scrollTo(0,0); \n        this.setState({            \n            start: undefined,  \n            translate:0,          \n            y:0\n        });           \n    }  \n    var animationID = window.requestAnimationFrame(this.draw.bind(this));       \n    this.setState({ animationID: animationID});\n}\n  \n\n  pause(){\n      this.setState({ \n          status: 'pause',\n           start: undefined,\n           y : this.state.translate\n    });\n      window.cancelAnimationFrame(this.state.animationID);\n  }\n\n  stop(){\n      window.cancelAnimationFrame(this.state.animationID);\n      this.setState({ \n          status: 'stop',          \n          translate: 0,             \n          start: undefined,\n          y:0\n      });\n    \n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {I18nextProvider} from \"react-i18next\";\nimport i18next from \"i18next\";\nimport common_ru from \"./translations/ru/common.json\";\nimport common_en from \"./translations/en/common.json\";\nimport common_es from \"./translations/es/common.json\";\nimport common_zh from \"./translations/zh/common.json\";\n\ni18next.init({\n  interpolation: { escapeValue: false },  // React already does escaping\n  lng: 'ru',                              // language to use\n  resources: {\n      en: {\n          common: common_en               // 'common' is our custom namespace\n      },\n      ru: {\n          common: common_ru\n      },\n      es: {\n          common: common_es\n      },      \n      zh: {\n        common: common_zh\n    },\n  },\n});\n\nReactDOM.render(  \n      <I18nextProvider i18n={i18next}>\n          <App/>\n      </I18nextProvider> ,   \n  document.getElementById('app')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}